get:
  operationId: retrieveAuthorities
  tags:
    - authority-storage
  parameters:
    - name: deleted
      in: query
      required: false
      description: Indicates if only deleted authority records should be retrieved
      schema:
        type: boolean
        default: false
    - name: idOnly
      in: query
      required: false
      description: Indicates if only IDs of authority records should be retrieved
      schema:
        type: boolean
        default: false
    - $ref: '../../parameters/offset-param.yaml'
    - $ref: '../../parameters/limit-param.yaml'
    - $ref: '../../parameters/cql-query.yaml'
    - name: Accept
      in: header
      required: false
      description: Specifies accepting media-types for the response
      schema:
        type: array
        items:
          type: string
          description: identifies media-type
        default: "application/json"
  responses:
    '200':
      description: Returns a list of authorities
      content:
        application/json:
          example: examples/authorities.sample
          schema:
            $ref: '../../schemas/authority-storage/authorityDtoCollection.yaml'
        text/plain;charset=utf-8:
          schema:
            type: string
          example: examples/authorities_ids.sample
    '400':
      $ref: '../../responses/badRequestResponse.yaml'
    '500':
      $ref: '../../responses/serverErrorResponse.yaml'
post:
  operationId: createAuthority
  tags:
    - authority-storage
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../../schemas/authority-storage/authorityDto.yaml'
  responses:
    '201':
      description: Record successfully created
      content:
        application/json:
          schema:
            $ref: '../../schemas/authority-storage/authorityDto.yaml'
    '400':
      $ref: '../../responses/badRequestResponse.yaml'
    '422':
      $ref: '../../responses/unprocessableEntityResponse.yaml'
    '500':
      $ref: '../../responses/serverErrorResponse.yaml'
